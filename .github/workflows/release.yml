name: Release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+" # Push events to matching v*, i.e. v20.15.10
      - "v[0-9]+.[0-9]+.[0-9]+.?[0-9]*" # Push events to matching v*, v20.15.10.1
      - "v[0-9]+.[0-9]+.[0-9]+-alpha.[0-9]+" # Push events to matching alpha releases
      - "v[0-9]+.[0-9]+.[0-9]+-beta.[0-9]+" # Push events to matching beta releases
      - "v[0-9]+.[0-9]+.[0-9]+-rc.[0-9]+" # Push events to matching release candidates


jobs:
  native-build-cli:
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-latest]
    steps:
      - uses: actions/checkout@v4.1.7
      - uses: actions/setup-go@v5
        with:
          go-version: 1.22.2 # The Go version to download (if necessary) and use.
      - name: Build CLI
        shell: bash
        run: |
          make build
          cp "build/sequoia" "sequoia-$RUNNER_OS"
      - uses: actions/upload-artifact@v4
        with:
          name: sequoia-${{runner.os}}
          path: sequoia-${{runner.os}}

  Release:
    needs:
      [native-build-cli]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4.1.7
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/v/}
      - name: Declare Commit Variables
        id: is_pre_release
        shell: bash
        run: |
          echo "::set-output name=IS_PRE_RELEASE::$(echo "${{ steps.get_version.outputs.VERSION }}" | awk 'BEGIN{prerelease="false"} /beta|alpha/{prerelease="true"} END{print prerelease}')"
      - uses: actions/download-artifact@v4
        with:
          name: sequoia-Linux
      - uses: actions/download-artifact@v4
        with:
          name: sequoia-macOS
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          prerelease: ${{ steps.is_pre_release.outputs.IS_PRE_RELEASE }}
          files: |
            sequoia-macOS
            sequoia-Linux
